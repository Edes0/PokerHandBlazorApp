@page "/CardGame"

@inject IServiceManager serviceManager

@using Models
@using Service.Contracts

<h3>CardGame</h3>

@if (hand is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Rank</th>
                <th>Suit</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var card in hand.Cards)
            {
                <tr>
                    <td>@card.RankChar</td>
                    <td>@card.SuitChar</td>
                    <td>       </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    CardDeckModel cardDeck = new(1);
    CardDeckModel? throwDeck = new(0);
    HandModel? hand = new();

    protected override async Task OnInitializedAsync()
    {
        ShuffleCardDeck();
        AddCardsToHand(5);
    }

    private void ShuffleCardDeck()
    {
        cardDeck.Shuffle();
    }

    private async Task AddCardsToHand(int amount)
    {
        hand.Cards = cardDeck.Cards.Take(amount).ToList();
        await serviceManager.HandService.CreateHandAsync(hand);
    }
}
